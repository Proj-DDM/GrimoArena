#ifndef _TIMER_H_
#define _TIMER_H_

namespace MyUtil
{

	enum COUNTTAG
	{
		CountUp,
		CountDown
	};
	/************************************************
	タイマークラス
	*************************************************/
	class Timer
	{
	public:
		/********************************************
		コンストラクタ
		time : 初期値
		********************************************/
		Timer(int _time);

		/********************************************
		コンストラクタ
		*********************************************/
		Timer();

		/********************************************
		コンストラクタ

		time : 初期値
		isStart : スタートフラグ
		isStop : 止まっているか
		********************************************/
		Timer(int _time, bool _isStart, bool _isStop);

		/*********************************************
		デストラクタ
		**********************************************/
		~Timer();

		/**********************************************
		更新
		スタートしている場合タイマーを回す
		**********************************************/
		void update();
		/**********************************************
		タイマーを回す
		**********************************************/
		void begin();

		/**********************************************
		一時停止
		**********************************************/
		void pause();

		/**********************************************
		一時停止解除
		***********************************************/
		void resume();

		/**********************************************
		タイマーのリセット
		**********************************************/
		void reset();
		
		
		/*******************************************
		演算子のオーバーロード
		********************************************/
		Timer operator + (int _time)const;
		Timer operator ++ (int);

		/********************************************
		現在の時間の取得
		********************************************/
		int getTime();

		/*******************************************
		何秒たっているかの取得
		********************************************/
		int getSecond();
	/*********************************
	private関数
	**********************************/
	private:
		bool IsStart();

	/*********************************
	private変数	
	**********************************/
	private:
		int  mTime;	//タイマーカウント
		bool mIsStart;//スタートしているか
		bool mIsStop;//とまっているか？
	};
}

#endif